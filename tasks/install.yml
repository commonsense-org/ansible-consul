---

### Directories creation
- name: Ensure consul directories have been created
  block:
  - name: Ensure configuration and data directories have been created
    file:
      dest: "{{ item }}"
      state: directory
      owner: "{{ consul_user }}"
      group: "{{ consul_group }}"
      mode: 0700
    with_items:
      - "{{ consul_config_path }}"
      - "{{ consul_data_path }}"
  - name: Ensure run directory has been created
    file:
      dest: "{{ consul_run_path }}"
      state: directory
      owner: "{{ consul_user }}"
      group: "{{ consul_group }}"
      mode: 0750

- name: Ensure log directory is created if syslog logging is disabled
  file:
    dest: "{{ consul_log_path }}"
    state: directory
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
  when:
    - not consul_syslog_enable | bool
    - not consul_configure_syslogd | bool

- name: Ensure binary path has been created
  file:
    path: "{{ consul_bin_path }}"
    state: directory
    owner: root
    mode: 0755

### Consul installation steps
- name: Install OS packages
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ consul_os_packages }}"

- name: Read package checksum file
  stat:
    path: "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  run_once: true
  ignore_errors: yes
  register: consul_checksum
  delegate_to: 127.0.0.1

- name: Download package checksum file
  get_url:
    url: "{{ consul_checksum_file_url }}"
    dest: "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS"
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  run_once: true
  when: not consul_checksum.stat.exists | bool
  delegate_to: 127.0.0.1

- name: Read package checksum
  shell: grep "{{ consul_pkg }}" "{{ role_path }}/files/consul_{{ consul_version }}_SHA256SUMS" | awk '{print $1}'
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  register: consul_sha256
  run_once: true
  delegate_to: 127.0.0.1

- name: Check Consul package file
  stat:
    path: "{{ role_path }}/files/{{ consul_pkg }}"
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  register: consul_package
  run_once: true
  delegate_to: 127.0.0.1

- name: Download Consul package
  get_url:
    url: "{{ consul_zip_url }}"
    dest: "{{ role_path }}/files/{{ consul_pkg }}"
    checksum: "sha256:{{ consul_sha256.stdout }}"
    timeout: "42"
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  when: not consul_package.stat.exists | bool
  run_once: true
  delegate_to: 127.0.0.1

- name: Create Temporary Directory for Extraction
  tempfile:
    state: directory
    prefix: ansible-consul.
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  register: install_temp
  run_once: true
  delegate_to: 127.0.0.1

- name: Unarchive Consul package
  unarchive:
    src: "{{ role_path }}/files/{{ consul_pkg }}"
    dest: "{{ install_temp.path }}/"
    creates: "{{ install_temp.path }}/consul"
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  delegate_to: 127.0.0.1

- name: Install Consul
  copy:
    src: "{{ install_temp.path }}/consul"
    dest: "{{ consul_bin_path }}/consul"
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0755
  notify:
    - restart consul

- name: Cleanup
  file:
    path: "{{ install_temp.path }}"
    state: "absent"
  become: false
  vars:
    ansible_become: false
    ansible_connection: local
  tags: installation
  run_once: true
  delegate_to: 127.0.0.1

- name: Ensure service systemd script has been defined
  template:
    src: consul_systemd.service.j2
    dest: /lib/systemd/system/consul.service
    owner: root
    group: root
    mode: 0644
  register: systemd_unit
  notify: restart consul
  when:
    - ansible_service_mgr == "systemd"

- name: Reload systemd
  systemd:
    daemon_reload: true
  when: systemd_unit is changed

- name: Start Consul
  service:
    name: consul
    state: started
    enabled: true